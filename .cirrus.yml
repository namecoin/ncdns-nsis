# Attention: if you submit an improvement for a Namecoin Cirrus config, please
# file a GitHub issue about it at the namecoin/meta repo, so that we can make
# sure it propagates to all the other Namecoin repos.  Thanks!

task:
  name: Lint
  container:
    image: fedora:latest
    cpu: 1
    memory: 1G
  lint_script:
    ./testdata/lint.sh

# TODO: Maybe cross-compile for Win32 targets too?
task:
  name: Cross-Compile $DISTRO
  matrix:
    - container:
        image: fedora:latest
        cpu: 1
        memory: 1G
      install_script:
        - dnf install -y git make mingw32-nsis unzip wget
      env:
        DISTRO: Fedora
        NCDNS_LOGGING: "1"
    - container:
        image: debian:latest
        cpu: 1
        memory: 1G
      install_script:
        - apt-get update
        - apt-get install -y curl git make nsis unzip wget
      env:
        DISTRO: Debian
  # TODO: fetch latest versions of everything
  fetch_script:
    # TODO: remove this, download ConsensusJ-Namecoin, certinject, Encaya, and generate_nmc_cert like we do everything else.
    - mkdir -p build64/artifacts/
    - cd build64/artifacts/
    # Namecoin Core
    - LATEST_NAMECOIN_CORE_VERSION=$(curl https://www.namecoin.org/download/ | grep --only-matching -E 'namecoin-core-[0-9\.]+' | head --lines=1 | grep --only-matching -E '[0-9\.]+')
    - curl -o namecoin-win64-setup-unsigned.exe https://www.namecoin.org/files/namecoin-core/namecoin-core-$LATEST_NAMECOIN_CORE_VERSION/namecoin-nc$LATEST_NAMECOIN_CORE_VERSION-win64-setup-unsigned.exe
    # ConsensusJ
    - curl -o bitcoinj-daemon.jar https://www.namecoin.org/files/ConsensusJ-Namecoin/0.3.2.1/namecoinj-daemon-0.3.2-SNAPSHOT.jar
    # Electrum-NMC
    - curl -o electrum-nmc-setup.exe https://www.namecoin.org/files/electrum-nmc/electrum-nmc-3.3.10/electrum-nmc-nc3.3.10-setup.exe
    # BIND
    # As per https://www.isc.org/download/#BIND , "9.16.x is the last branch of
    # BIND with native Windows support."
    - LATEST_BIND_VERSION=$(curl https://ftp.isc.org/isc/bind/ | grep --only-matching '"[0-9]*\.[0-9]*\.[0-9]*/"' | grep '9\.16' | tail --lines=1 | grep --only-matching '[0-9]*\.[0-9]*\.[0-9]*')
    - curl -o bind.zip https://ftp.isc.org/isc/bind/$LATEST_BIND_VERSION/BIND$LATEST_BIND_VERSION.x64.zip
    - unzip bind.zip
    - rm bind.zip
    # certinject
    - curl -o certinject--windows_amd64.tar.gz https://api.cirrus-ci.com/v1/artifact/github/namecoin/certinject/Cross-Compile%20Go%20latest/binaries/dist/certinject--windows_amd64.tar.gz
    - tar -xaf certinject--windows_amd64.tar.gz
    - mv certinject--windows_amd64/bin/certinject.exe ./
    - rm -rf certinject--windows_amd64/
    # Encaya
    - curl -o encaya--windows_amd64.tar.gz https://api.cirrus-ci.com/v1/artifact/github/namecoin/encaya/Cross-Compile%20Go%20latest/binaries/dist/encaya--windows_amd64.tar.gz
    - tar -xaf encaya--windows_amd64.tar.gz
    - mv encaya--windows_amd64/bin/*.exe ./
    - rm -rf encaya--windows_amd64/
    # generate_nmc_cert
    - curl -o generate_nmc_cert--windows_amd64.tar.gz https://api.cirrus-ci.com/v1/artifact/github/namecoin/generate_nmc_cert/Cross-Compile%20Go%20latest/binaries/dist/generate_nmc_cert--windows_amd64.tar.gz
    - tar -xaf generate_nmc_cert--windows_amd64.tar.gz
    - mv generate_nmc_cert--windows_amd64/bin/*.exe ./
    - rm -rf generate_nmc_cert--windows_amd64/
    # qlib
    - curl -o qlib--windows_amd64.tar.gz https://api.cirrus-ci.com/v1/artifact/github/namecoin/qlib/Cross-Compile%20Go%20latest/binaries/dist/qlib--windows_amd64.tar.gz
    - tar -xaf qlib--windows_amd64.tar.gz
    - mv qlib--windows_amd64/bin/*.exe ./
    - rm -rf qlib--windows_amd64/
    # ncdns
    - curl -o ncdns--windows_amd64.tar.gz https://api.cirrus-ci.com/v1/artifact/github/namecoin/ncdns/Cross-Compile%20Go%20latest/binaries/dist/ncdns--windows_amd64.tar.gz
    - tar -xaf ncdns--windows_amd64.tar.gz
    - mv ncdns--windows_amd64/bin/*.exe ./
    - rm -rf ncdns--windows_amd64/
    - cd ../../
  build_script:
    # Tag detection from ncdns-repro
    - NCDNS_TAG=$(git ls-remote --tags "https://github.com/namecoin/ncdns.git" | grep -v '\^{}' | awk '{print $2}' | awk -F"/" '{print $3}' | sort -V | tail --lines=1)
    # TODO: check for NSIS warnings
    - make NCDNS_64BIT=1 NCDNS_PRODVER=$NCDNS_TAG
    - mv build64/bin/ncdns-*-win64-install.exe ./ncdns--win64-install.exe
  upload_script:
    - curl -s -X POST --data-binary @ncdns--win64-install.exe http://$CIRRUS_HTTP_CACHE_HOST/cross_compile_bin_$DISTRO
  binaries_artifacts:
    path: "ncdns--win64-install.exe"

task:
  name: Installation Tests $BUILD_DISTRO
  windows_container:
    image: cirrusci/windowsservercore:2019
    # Don't use minimal CPU/memory since Namecoin Core may eat some.
  matrix:
    - env:
        INSTALL_VCPP: "0"
    - env:
        INSTALL_VCPP: "1"
      vcpp_script:
        - choco install -y vcredist140
  install_script:
    - curl -o ncdns--win64-install.exe http://%CIRRUS_HTTP_CACHE_HOST%/cross_compile_bin_%BUILD_DISTRO%
    - SET PATH=%PATH%;%cd%
    - powershell -ExecutionPolicy Unrestricted -File "testdata/install.ps1"
  matrix:
    - env:
        BUILD_DISTRO: Fedora
      depends_on:
        - "Cross-Compile Fedora"
    - env:
        BUILD_DISTRO: Debian
      depends_on:
        - "Cross-Compile Debian"

# TODO: GitHub Release Upload

# TODO: Add Windows unit tests

# TODO: "Testing config parsing" from travis.bash

# TODO: Add multiple Go versions to Gox builds and unit tests

# TODO: Add debug stripping and path stripping to Gox for repro builds

# TODO: Re-add darwin/386 for old Go versions where it was supported

# TODO: Fix upload repo for tagged commits (don't use Nightly repo for this)

# TODO: Skip Signify and Release if it's not applicable

# TODO: Signify Nightlies

# TODO: IRC notifications on failure

# TODO: Cron
